package p2ac.moodle.backend.controllers;

import org.springframework.web.multipart.MultipartFile;

import p2ac.moodle.backend.utilis.myUnzip;

import java.io.File;
import java.io.IOException;
import java.util.UUID;

import javax.servlet.annotation.MultipartConfig;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.util.FileSystemUtils;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@MultipartConfig() 
public class TeacherUploadController {
	
	@Value("${upload.dir.parent}")
    private String parentDir;

    @Value("${upload.dir.assignment}")
    private String folderNamePrefix;

    @Value("${upload.dir.test}")
    private String testFolderName;
    
    
    private static final Logger LOG = Logger.getLogger(TeacherUploadController.class);
		
    /**
     * Recive zip file with correction files and create assignment folder 
     * correction files to folder inside assigment folder.
     * @param inputFile: uploaded file recived in post request
     * @param assignmentID: unique assignmentID generated by moodle
     * @throws IOException
     */
  
	@RequestMapping(value = "/upload/teacher" ,method = RequestMethod.POST) 
	public void uploadFiles(@RequestParam("file") MultipartFile inputFile, 
								  @RequestParam("assignmentID") String assignmentID) throws IOException {
							
			//create folder for assignment
			String assignmentFolderPath =parentDir + File.separator + folderNamePrefix + assignmentID + File.separator + testFolderName;
			new File(assignmentFolderPath).mkdirs();
			
			//file for transfer MultipartFile
			File correctionFile = new File(assignmentFolderPath, String.valueOf(UUID.randomUUID())); // UUID to keep this file name unique
	        inputFile.transferTo(correctionFile);
			
	        LOG.debug("Unzipping...");
			myUnzip.unzip(correctionFile, assignmentFolderPath);
				
		}
	
	
	
	/**
     * Delete the folder for the assignment.
     * Called when the teacher deletes the p2ac assignment
     *
     * @param assignmentId      ID of the assignment to delete. Generated by Moodle
     * @throws IOException
     */
	@RequestMapping(value = "/delete/teacher" ,method = RequestMethod.DELETE) 
	public void deleteAssignment(@RequestParam("assignmentID") String assignmentID) throws IOException {
		//recupero cartella assignment che voglio eleminare
		String assignmentPath = parentDir + File.separator + folderNamePrefix + assignmentID;
		File assignmentDir = new File(assignmentPath);

		LOG.debug("deleting assignmnent_" + assignmentID  + "...");
		//FileUtils.deleteDirectory(assignmentDir);
		FileSystemUtils.deleteRecursively(assignmentDir);
			
	}
	

}
